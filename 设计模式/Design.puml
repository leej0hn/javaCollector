@startmindmap
'https://plantuml.com/mindmap-diagram

title 设计模式

+ <&flag>设计模式
++ 创建型模式
+++ 简单工厂模式
++++ 优点
+++++ 帮助封装
+++++ 解耦
++++ 缺点
+++++ 可能增加客户端的复杂度
++++ 本质
+++++ 选择实现
+++ 工厂模式
++++ 优点
+++++ 可以在不知具体实现的情况下编程
+++++ 更容易扩展对象的新版本
++++ 缺点
+++++ 具体产品对象和工厂方法的耦合性
++++ 本质
+++++ 延迟到子类来选择实现
+++ 抽象工厂模式
+++ 建造者模式
+++ 单例模式
+++ 原型模式（多例）
++ 结构型模式
+++ 适配器模式
+++ 装饰器模式
+++ 组合模式
+++ 桥接模式
+++ 过滤器模式
+++ 外观模式
+++ 享元模式
+++ 代理模式
-- 行为型模式
--- 策略模式
--- 观察者模式
--- 责任链模式
--- 命令模式
--- 解释器模式
--- 迭代器模式
--- 中介者模式
--- 备忘录模式
--- 状态模式
--- 空对象模式
--- 模板模式
--- 访问者模式
-- 6大原则
--- 开闭原则:对扩展开放，对修改关闭
--- 里氏代换原则：对开闭原则的补充。
--- 依赖倒转原则: 针对接口编程，依赖于抽象而不依赖于具体。(是开闭原则的基础)
--- 接口隔离原则: 使用多个隔离的接口，比使用单个接口要好。（降低类之间的耦合度）
--- 迪米特法则，又称最少知道原则: 个实体应当尽量少地与其他实体之间发生相互作用，使得系统功能模块相对独立。
--- 合成复用原则: 尽量使用合成/聚合的方式，而不是使用继承。
center footer JavaCollector
@endmindmap
